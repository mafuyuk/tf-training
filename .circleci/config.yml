version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.9

commands:
  restore_plugins:
    steps:
      - restore_cache:
          name: Restore terraform plugins
          key: plugins-{{ .Branch }}
  save_plugins:
    parameters:
      path:
        type: string
        default: .
    steps:
      - save_cache:
          name: Cache terraform plugins
          key: plugins-{{ .Branch }}
          paths:
            - .terraform.d/plugin-cache
            - << parameters.path >>/.terraform/plugins
  restore_plan:
    parameters:
      path:
        type: string
        default: .
    steps:
      - restore_cache:
          name: Restore terraform plan result
          key: plan-{{ checksum "<< parameters.path >>/.terraform/plan.txt" }}
  save_plan:
    parameters:
      path:
        type: string
        default: .
    steps:
      - save_cache:
          name: Cache terraform plan result
          key: plan-{{ checksum "<< parameters.path >>/.terraform/plan.txt" }}
          paths:
            - << parameters.path >>/.terraform/plan.txt

jobs:
  init:
    docker:
      - image: hashicorp/terraform:<< parameters.terraform-version >>
    environment:
      - TF_PLUGIN_CACHE_DIR: .terraform.d/plugin-cache
    parameters:
      terraform-version:
        type: string
        default: latest
      path:
        type: string
        default: .
    steps:
      - checkout
      - restore_plugins
      - run:
          name: Execute terraform init
          command: terraform init
          working_directory: << parameters.path >>
      - save_plugins:
          path: << parameters.path >>
  plan:
    executor: aws-cli/default
    docker:
      - image: hashicorp/terraform:<< parameters.terraform-version >>
    environment:
      - TF_PLUGIN_CACHE_DIR: .terraform.d/plugin-cache
    parameters:
      terraform-version:
        type: string
        default: latest
      path:
        type: string
        default: .
      run_save_plan:
        type: boolean
    steps:
      - checkout
      - restore_plugins
      - run:
          name: Get terraform module
          command: terraform get
          working_directory: << parameters.path >>
      - run:
          name: Execute terraform plan
          command: terraform plan -out .terraform/plan.txt
          working_directory: << parameters.path >>
      - when:
          condition: << parameters.run_save_plan >>
          steps:
            - save_plan:
                path: << parameters.path >>
  apply:
    executor: aws-cli/default
    docker:
      - image: hashicorp/terraform:<< parameters.terraform-version >>
    environment:
      - TF_PLUGIN_CACHE_DIR: .terraform.d/plugin-cache
    parameters:
      terraform-version:
        type: string
        default: latest
      path:
        type: string
        default: .
      run_restore_plan:
        type: boolean
    steps:
      - checkout
      - restore_plugins
      - run:
          name: Get terraform module
          command: terraform get
          working_directory: << parameters.path >>
      - when:
          condition: << parameters.run_restore_plan >>
          steps:
            - restore_plan:
                path: << parameters.path >>
            - run:
                name: Execute terraform apply with plan file
                command: terraform apply -input .terraform/plan.txt
                working_directory: << parameters.path >>
      - unless:
          condition: << parameters.run_restore_plan >>
          steps:
            - run:
                name: Execute terraform apply
                command: terraform apply
                working_directory: << parameters.path >>

workflows:
  deploy-mutable:
    jobs:
      - init:
          path: environments/mutable
      - plan:
          path: environments/mutable
          run_save_plan: true
          requires:
            - init
      - check-plan:
          type: approval
          requires:
            - plan
      - apply:
          path: environments/mutable
          run_restore_plan: true
          requires:
            - check-plan